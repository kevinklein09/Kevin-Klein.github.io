// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
  return array.reduce((flatArray, currentArray) => {
    return flatArray.concat(currentArray);
  }, [])
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, test, update, body) {
  for(let n = value; test(n); n = update(n)) {
    body(n);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {
  for(let element of array) {
    if(!test(element)) {
      return false;
    }
  }
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
  //create two arrays to stor rtl values and ltr values
  let ltr = [];
  let rtl = [];
  //iterate through string
  for(let i = 0; i < string.length; i++) {
    let code = string.charCodeAt(i);
    let script = characterScript(code); // will be either an object or null

    if(script !== null) {
      if(script.direction === 'ltr') {
        ltr.push(script);
      } else {
        rtl.push(script);
      }
    }
  }
  if(ltr.length > rtl.length) {
    return 'ltr';
  } else {
    return 'rtl';
  }
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
